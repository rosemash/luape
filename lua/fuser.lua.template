if #arg ~= 3 then
	print(("%s <luastub.bin> <source OR file:source.lua> <output.exe>"):format(arg[0]:match("^.+[/\\](.+)$")))
	return
end

local buff = ""

local function skipAndAdd(file, offset, num)
	buff = buff .. file:read(offset)
	local dword = 0
	for c in file:read(0x4):reverse():gmatch(".") do dword = dword * 256 + c:byte() end
	dword = dword + num
	print(("0x%.08x %d->%d"):format(file:seek()-4, dword-num, dword))
	for i=1,4 do buff=buff..("").char(dword % 256)dword = dword/256 end
end

local source = arg[2]
local filename = source:match("^file:(.+)$")
if filename then
	local input = io.open(filename, "r")
	source = input:read("*all")
	input:close()
end

local stub = io.open(arg[1], "rb")

skipAndAdd(stub, 0x{o1:08x}, #source)
skipAndAdd(stub, 0x{o2:08x}, #source)
skipAndAdd(stub, 0x{o3:08x}, #source)

buff = buff .. stub:read("*all") .. source

stub:close()

local output = io.open(arg[3], "wb")
output:write(buff)
output:write(("\0"):rep({alignment:d})) --to compensate for file alignment
output:close()

print(("Wrote %d bytes to %q."):format(#buff, arg[3]))
